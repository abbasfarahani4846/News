@model News.Models.ViewModels.AdminDashboardViewModel

<div class="row">
    <div class="col-sm-6 col-md-3">
        <div class="card card-stats card-round">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-icon">
                        <div class="icon-big text-center icon-primary bubble-shadow-small">
                            <i class="fas fa-newspaper"></i>
                        </div>
                    </div>
                    <div class="col col-stats ms-3 ms-sm-0">
                        <div class="numbers">
                            <p class="card-category">News</p>
                            <h4 class="card-title">@Model.NewsCount</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm-6 col-md-3">
        <div class="card card-stats card-round">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-icon">
                        <div class="icon-big text-center icon-info bubble-shadow-small">
                            <i class="fas fa-comments"></i>
                        </div>
                    </div>
                    <div class="col col-stats ms-3 ms-sm-0">
                        <div class="numbers">
                            <p class="card-category">Comments</p>
                            <h4 class="card-title">@Model.CommentsCount</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm-6 col-md-3">
        <div class="card card-stats card-round">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-icon">
                        <div class="icon-big text-center icon-success bubble-shadow-small">
                            <i class="fas fa-sitemap"></i>
                        </div>
                    </div>
                    <div class="col col-stats ms-3 ms-sm-0">
                        <div class="numbers">
                            <p class="card-category">Categories</p>
                            <h4 class="card-title">@Model.CategoriesCount</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-sm-6 col-md-3">
        <div class="card card-stats card-round">
            <div class="card-body">
                <div class="row align-items-center">
                    <div class="col-icon">
                        <div class="icon-big text-center icon-secondary bubble-shadow-small">
                            <i class="fas fa-tags"></i>
                        </div>
                    </div>
                    <div class="col col-stats ms-3 ms-sm-0">
                        <div class="numbers">
                            <p class="card-category">Tags</p>
                            <h4 class="card-title">@Model.TagsCount</h4>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">

        <div class="card">
            <div class="card-header">
                <h4 class="card-title">Published News per Month (@DateTime.Now.Year)</h4>
            </div>
            <div class="card-body">
                <div class="chart-container">
                    <canvas id="monthlyNewsChart"></canvas>
                </div>
            </div>
        </div>

    </div>
</div>

@section Scripts {
    <script>
        // Use $(document).ready() to ensure the HTML DOM is fully loaded before executing the script.
        $(document).ready(function() {

            // Serialize the C# ViewModel into a JavaScript object.
            // ASP.NET Core's default JSON serializer automatically converts C# PascalCase properties (e.g., ChartLabels)
            // to JavaScript camelCase properties (e.g., chartLabels).
            var chartModel = @Html.Raw(Json.Serialize(Model));

            // Get the canvas element where the chart will be drawn.
            var canvasElement = document.getElementById('monthlyNewsChart');

            // IMPORTANT: Check if the canvas element exists to prevent runtime errors.
            if (canvasElement) {
                var ctx = canvasElement.getContext('2d');

                // Create a new Chart.js instance.
                var myChart = new Chart(ctx, {
                    type: 'line', // The type of chart we want to create.
                    data: {
                        // The labels for the X-axis (e.g., "Jan", "Feb").
                        labels: chartModel.chartLabels,

                        // 'datasets' is an array of objects. Each object represents a line on the chart.
                        datasets: [
                        {
                            // --- First Dataset: NEWS ---
                            label: "Published News",
                            borderColor: '#1572e8', // Blue color for the line.
                            backgroundColor: 'rgba(23, 125, 255, 0.2)', // Light blue for the area under the line.
                            fill: true,
                            borderWidth: 2,
                            tension: 0.4, // Makes the line curvy instead of sharp.
                            data: chartModel.chartData // The data points for the news line.
                        },
                        {
                            // --- NEW Second Dataset: COMMENTS ---
                            label: "Published Comments",
                            borderColor: '#48abf7', // Green color for the line to distinguish it.
                            backgroundColor: 'rgba(40, 167, 69, 0.2)', // Light green for the area fill.
                            fill: true,
                            borderWidth: 2,
                            tension: 0.4,
                            // Use the new data property from our ViewModel.
                            data: chartModel.chartDataComments
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false, // Important for fitting the chart in a container.
                        plugins: {
                            legend: {
                                display: true, // Show the legend at the top (e.g., "Published News").
                                position: 'top'
                            }
                        },
                        scales: {
                            y: {
                                beginAtZero: true, // Ensure the Y-axis starts at 0.
                                ticks: {
                                    precision: 0 // Prevent decimal values on the Y-axis (e.g., 1.5).
                                }
                            }
                        }
                    }
                });
            } else {
                // Log an error to the browser console if the canvas element is not found.
                console.error("Error: Canvas element with ID 'monthlyNewsChart' was not found on the page.");
            }
        });
    </script>
}